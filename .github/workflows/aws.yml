name: SonarQube analysis and push image to docker hub 

on:
  push:
    branches: [ "master" ]
  pull_request:
    types: [opened, synchronize, reopened]
    
permissions:
  contents: read

jobs:
  deploy:
    name: Analyze and Push  
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven

    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build and analyze
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=todolistjava_todolist-app
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push image to Docker Hub
      id: build-image
      env:
        DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to Docker Hub so that it can
        # be deployed to ECS.
        docker build -t $DOCKERHUB_REPOSITORY:$IMAGE_TAG .
        docker push $DOCKERHUB_REPOSITORY:$IMAGE_TAG
        echo "image=$DOCKERHUB_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
